# ================================
# Research Paper Analysis API
# Environment Configuration Template
# ================================

# Copy this file to .env and update the values according to your setup

# ================================
# DATABASE CONFIGURATION
# ================================

# SQLite Database (Default - recommended for development)
# Use full absolute path to avoid database connection issues
# Example for Windows: sqlite:///C:/Users/YourName/project/backend/instance/app.db
# Example for macOS/Linux: sqlite:////home/username/project/backend/instance/app.db
SQLALCHEMY_DATABASE_URI=sqlite:///instance/app.db

# PostgreSQL Database (Production)
# SQLALCHEMY_DATABASE_URI=postgresql://username:password@localhost:5432/research_critic

# MySQL Database (Alternative)
# SQLALCHEMY_DATABASE_URI=mysql://username:password@localhost:3306/research_critic

# Disable SQLAlchemy modification tracking for performance
SQLALCHEMY_TRACK_MODIFICATIONS=False

# ================================
# SECURITY CONFIGURATION
# ================================

# Flask Secret Key (REQUIRED - Change this in production!)
# Generate a secure key: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-super-secret-key-change-in-production

# JWT Secret Key (REQUIRED - Change this in production!)
# Generate a secure key: python -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production

# JWT Token Expiration Times (in seconds)
JWT_ACCESS_TOKEN_EXPIRES=3600        # 1 hour
JWT_REFRESH_TOKEN_EXPIRES=2592000    # 30 days

# ================================
# API KEYS (OPTIONAL)
# ================================

# Semantic Scholar API Key (Optional - uses mock data if not provided)
# Get your key at: https://www.semanticscholar.org/product/api
SEMANTIC_SCHOLAR_API_KEY=your-semantic-scholar-api-key

# Google Fact Check Tools API Key (Optional - uses mock data if not provided)
# Get your key at: https://developers.google.com/fact-check/tools/api
GOOGLE_FACT_CHECK_API_KEY=your-google-fact-check-api-key

# ================================
# FILE UPLOAD CONFIGURATION
# ================================

# Upload directory (relative to backend folder)
UPLOAD_DIR=uploads

# Report generation directory
REPORT_DIR=reports

# Corpus directory for plagiarism detection
CORPUS_DIR=corpus

# Maximum file size for uploads (in MB)
MAX_UPLOAD_MB=25

# Allowed file extensions
ALLOWED_EXT=.pdf

# File permissions for upload folder (Unix/Linux/macOS only)
UPLOAD_FOLDER_PERMISSIONS=755

# ================================
# MACHINE LEARNING CONFIGURATION
# ================================

# Hugging Face Model Settings
# Model name for text summarization
HF_MODEL_NAME=facebook/bart-large-cnn

# Cache directory for downloaded models
HF_CACHE_DIR=./models_cache

# Enable/disable Hugging Face summarizer (true/false)
USE_HF_SUMMARIZER=true

# ================================
# API ENDPOINT CONFIGURATION
# ================================

# Semantic Scholar API Configuration
SEMANTIC_SCHOLAR_BASE=https://api.semanticscholar.org/graph/v1/paper/search
SEMANTIC_SCHOLAR_FIELDS=title,authors,year,venue

# Google Fact Check API Configuration
GOOGLE_FACT_CHECK_URL=https://factchecktools.googleapis.com/v1alpha1/claims:search

# CrossRef API (No key required)
CROSSREF_API_URL=https://api.crossref.org/works

# ================================
# CORS CONFIGURATION
# ================================

# Allowed origins for CORS (comma-separated)
# Add your frontend URLs here
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8080

# ================================
# FEATURE FLAGS
# ================================

# Allow guest users to upload files without authentication (true/false)
ALLOW_GUEST_UPLOADS=false

# Enable detailed logging (true/false)
DEBUG_LOGGING=false

# Enable rate limiting (true/false)
ENABLE_RATE_LIMITING=false

# ================================
# SERVER CONFIGURATION
# ================================

# Server host (use 0.0.0.0 for all interfaces, 127.0.0.1 for local only)
HOST=0.0.0.0

# Server port
PORT=5000

# Debug mode (true/false) - NEVER use true in production!
DEBUG=true

# Flask environment (development/production)
FLASK_ENV=development

# ================================
# LOGGING CONFIGURATION
# ================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/app.log

# Error log file path
ERROR_LOG_FILE=logs/error.log

# Maximum log file size in MB
MAX_LOG_SIZE_MB=10

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# ================================
# RATE LIMITING (if enabled)
# ================================

# Requests per minute for anonymous users
RATE_LIMIT_ANONYMOUS=10

# Requests per minute for authenticated users
RATE_LIMIT_AUTHENTICATED=50

# Requests per minute for admin users
RATE_LIMIT_ADMIN=200

# ================================
# EMAIL CONFIGURATION (Future feature)
# ================================

# SMTP Settings for sending notifications
# MAIL_SERVER=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USE_TLS=true
# MAIL_USERNAME=your-email@gmail.com
# MAIL_PASSWORD=your-app-password

# ================================
# CACHE CONFIGURATION (Future feature)
# ================================

# Redis cache settings
# REDIS_URL=redis://localhost:6379/0
# CACHE_TIMEOUT=300

# ================================
# MONITORING AND ANALYTICS
# ================================

# Enable usage analytics (true/false)
ENABLE_ANALYTICS=false

# Analytics provider (none/google/mixpanel)
ANALYTICS_PROVIDER=none

# Analytics tracking ID
ANALYTICS_TRACKING_ID=your-tracking-id

# ================================
# DEVELOPMENT SETTINGS
# ================================

# Enable SQL query logging in development (true/false)
SQLALCHEMY_ECHO=false

# Enable Flask debug toolbar (true/false)
DEBUG_TOOLBAR=false

# Disable CSRF protection in development (true/false) - NOT recommended
DISABLE_CSRF=false

# ================================
# PRODUCTION SETTINGS
# ================================

# Use SSL redirect in production (true/false)
FORCE_SSL=false

# Trust proxy headers (true/false)
TRUST_PROXY_HEADERS=false

# Session cookie security (true/false)
SECURE_COOKIES=false

# ================================
# BACKUP CONFIGURATION
# ================================

# Enable automatic database backups (true/false)
ENABLE_AUTO_BACKUP=false

# Backup directory
BACKUP_DIR=backups

# Backup frequency in hours
BACKUP_FREQUENCY_HOURS=24

# Number of backup files to keep
BACKUP_RETENTION_COUNT=7

# ================================
# NOTES
# ================================

# 1. Never commit the .env file to version control
# 2. Use strong, unique passwords and keys in production
# 3. Regularly rotate your API keys and secrets
# 4. Test your configuration in a staging environment before production
# 5. Monitor your logs for any configuration issues
# 6. Keep this file secure and limit access permissions

# Example production security settings:
# - Change all default keys and passwords
# - Set DEBUG=false
# - Set FLASK_ENV=production
# - Use HTTPS in production
# - Set SECURE_COOKIES=true if using HTTPS
# - Use a dedicated database server
# - Enable rate limiting
# - Configure proper CORS origins
# - Set up monitoring and logging

# For additional security, consider:
# - Using environment variables instead of .env file in production
# - Using a secrets management service (AWS Secrets Manager, Azure Key Vault, etc.)
# - Implementing additional authentication layers
# - Using a reverse proxy (nginx, Apache) in front of the application
# - Setting up SSL/TLS certificates
# - Regular security audits and dependency updates